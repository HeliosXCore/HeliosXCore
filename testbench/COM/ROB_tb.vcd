$date
	Wed Dec  6 19:49:29 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module ROB_tb $end
$var wire 1 ! brcond_combranch_o $end
$var wire 1 " store_commit_o $end
$var wire 32 # pc_combranch_o [31:0] $end
$var wire 32 $ jmpaddr_combranch_o [31:0] $end
$var wire 5 % dst_arf_2_o [4:0] $end
$var wire 5 & dst_arf_1_o [4:0] $end
$var wire 2 ' comnum_o [1:0] $end
$var wire 6 ( commit_ptr_2_o [5:0] $end
$var wire 6 ) commit_ptr_1_o [5:0] $end
$var wire 1 * combranch_o $end
$var wire 10 + bhr_combranch_o [9:0] $end
$var wire 1 , arfwe_2_o $end
$var wire 1 - arfwe_1_o $end
$var reg 10 . bhr_dp1_i [9:0] $end
$var reg 10 / bhr_dp2_i [9:0] $end
$var reg 1 0 clk $end
$var reg 6 1 dispatch_ptr_i [5:0] $end
$var reg 6 2 dp1_addr_i [5:0] $end
$var reg 1 3 dp1_i $end
$var reg 6 4 dp2_addr_i [5:0] $end
$var reg 1 5 dp2_i $end
$var reg 5 6 dst_dp1_i [4:0] $end
$var reg 5 7 dst_dp2_i [4:0] $end
$var reg 1 8 dstvalid_dp1_i $end
$var reg 1 9 dstvalid_dp2_i $end
$var reg 6 : finish_ex_alu1_addr_i [5:0] $end
$var reg 1 ; finish_ex_alu1_i $end
$var reg 6 < finish_ex_alu2_addr_i [5:0] $end
$var reg 1 = finish_ex_alu2_i $end
$var reg 6 > finish_ex_branch_addr_i [5:0] $end
$var reg 1 ? finish_ex_branch_brcond_i $end
$var reg 1 @ finish_ex_branch_i $end
$var reg 32 A finish_ex_branch_jmpaddr_i [31:0] $end
$var reg 6 B finish_ex_ldst_addr_i [5:0] $end
$var reg 1 C finish_ex_ldst_i $end
$var reg 6 D finish_ex_mul_addr_i [5:0] $end
$var reg 1 E finish_ex_mul_i $end
$var reg 1 F isbranch_dp1_i $end
$var reg 1 G isbranch_dp2_i $end
$var reg 32 H pc_dp1_i [31:0] $end
$var reg 32 I pc_dp2_i [31:0] $end
$var reg 1 J reset $end
$var reg 6 K rrf_freenum_i [5:0] $end
$var reg 1 L storebit_dp1_i $end
$var reg 1 M storebit_dp2_i $end
$scope module dut $end
$var wire 1 - arfwe_1_o $end
$var wire 1 , arfwe_2_o $end
$var wire 10 N bhr_dp1_i [9:0] $end
$var wire 10 O bhr_dp2_i [9:0] $end
$var wire 1 ! brcond_combranch_o $end
$var wire 1 0 clk $end
$var wire 1 * combranch_o $end
$var wire 1 P commit_1 $end
$var wire 1 Q commit_2 $end
$var wire 6 R dispatch_ptr_i [5:0] $end
$var wire 6 S dp1_addr_i [5:0] $end
$var wire 1 3 dp1_i $end
$var wire 6 T dp2_addr_i [5:0] $end
$var wire 1 5 dp2_i $end
$var wire 5 U dst_arf_1_o [4:0] $end
$var wire 5 V dst_arf_2_o [4:0] $end
$var wire 5 W dst_dp1_i [4:0] $end
$var wire 5 X dst_dp2_i [4:0] $end
$var wire 1 8 dstvalid_dp1_i $end
$var wire 1 9 dstvalid_dp2_i $end
$var wire 6 Y finish_ex_alu1_addr_i [5:0] $end
$var wire 1 ; finish_ex_alu1_i $end
$var wire 6 Z finish_ex_alu2_addr_i [5:0] $end
$var wire 1 = finish_ex_alu2_i $end
$var wire 6 [ finish_ex_branch_addr_i [5:0] $end
$var wire 1 ? finish_ex_branch_brcond_i $end
$var wire 1 @ finish_ex_branch_i $end
$var wire 32 \ finish_ex_branch_jmpaddr_i [31:0] $end
$var wire 6 ] finish_ex_ldst_addr_i [5:0] $end
$var wire 1 C finish_ex_ldst_i $end
$var wire 6 ^ finish_ex_mul_addr_i [5:0] $end
$var wire 1 E finish_ex_mul_i $end
$var wire 1 F isbranch_dp1_i $end
$var wire 1 G isbranch_dp2_i $end
$var wire 32 _ pc_dp1_i [31:0] $end
$var wire 32 ` pc_dp2_i [31:0] $end
$var wire 1 a prmiss_i $end
$var wire 1 J reset $end
$var wire 6 b rrf_freenum_i [5:0] $end
$var wire 1 " store_commit_o $end
$var wire 1 L storebit_dp1_i $end
$var wire 1 M storebit_dp2_i $end
$var wire 32 c pc_combranch_o [31:0] $end
$var wire 32 d jmpaddr_combranch_o [31:0] $end
$var wire 2 e comnum_o [1:0] $end
$var wire 6 f commit_ptr_2_o [5:0] $end
$var wire 10 g bhr_combranch_o [9:0] $end
$var reg 64 h brcond [63:0] $end
$var reg 6 i commit_ptr_1_o [5:0] $end
$var reg 64 j dstValid [63:0] $end
$var reg 64 k finish [63:0] $end
$var reg 64 l isbranch [63:0] $end
$var reg 64 m storebit [63:0] $end
$var reg 64 n valid [63:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx n
bx m
bx l
bx k
bx j
bx i
bx h
bx g
bx f
bx e
bx d
bx c
bx b
za
b0 `
b0 _
bx ^
bx ]
bx \
bx [
bx Z
bx Y
b0 X
b0 W
bx V
bx U
b0 T
b0 S
bx R
xQ
xP
b0 O
b0 N
xM
0L
bx K
1J
b0 I
b0 H
0G
0F
xE
bx D
xC
bx B
bx A
x@
x?
bx >
x=
bx <
x;
bx :
09
08
b0 7
b0 6
05
b0 4
03
b0 2
bx 1
00
b0 /
b0 .
x-
x,
bx +
x*
bx )
bx (
bx '
bx &
bx %
bx $
bx #
x"
z!
$end
#5000
0*
0"
0,
0-
b0 '
b0 e
0Q
0P
b1 (
b1 f
b0 h
b0 k
b0 n
b0 )
b0 i
10
#10000
00
0J
#15000
10
#20000
00
#25000
10
#30000
00
b1 6
b1 W
13
#35000
bx0 j
bx0 m
bx0 l
b1 &
b1 U
b1 n
b0 k
10
b0 :
b0 Y
1;
#40000
00
#45000
b1 '
b1 e
1P
b1 k
10
#50000
00
#55000
0"
0*
b10 (
b10 f
b0 '
b0 e
0P
0-
b0 k
b1 n
bx &
bx U
b1 )
b1 i
10
#60000
00
#65000
b1 k
10
#70000
00
#75000
b0 k
10
#80000
00
#85000
b1 k
10
#90000
00
#95000
b0 k
10
#100000
00
#105000
b1 k
10
#110000
00
#115000
b0 k
10
#120000
00
#125000
b1 k
10
#130000
00
#135000
